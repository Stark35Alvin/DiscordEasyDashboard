var clientID,clientSecret,callbackUrl,scope,botToken,loginPath,authorizeUrlPrompt;function settingsControl(){return void 0!==clientID}function errorSettings(e,r){this.message=r,this.name=e}function moduleChecker(){try{require("axios"),require("express-session"),require("discord.js")}catch(e){throw new errorSettings("DiscordEasyDashboard - ModuleError","[ERROR] Not install required modules. Please make sure you have installed the modules below correctly.\n+ axios\n+ express-session\n+ discord.js")}}moduleChecker();const axios=require("axios"),session=require("express-session"),Discord=require("discord.js");let bot=new Discord.Client,permCalculator=Discord.Permissions;async function resCode(e,r){try{let r="client_id={}&client_secret={}&grant_type=refresh_token&redirect_uri={}&refresh_token={}&scope={}".replace("{}",clientID).replace("{}",clientSecret).replace("{}",callbackUrl).replace("{}",e.session.REFRESH_CODE).replace("{}",scope),t=await axios({method:"post",url:"https://discordapp.com/api/oauth2/token",data:r,headers:{"Content-Type":"application/x-www-form-urlencoded"}});e.session.CODE=t.data.access_token,e.session.REFRESH_CODE=t.data.refresh_token,e.session.TOKEN_TYPE=t.data.token_type}catch(e){console.log('{ "error_description": "An error occurred while refreshing the user token.", "error": "{}" }'.replace("{}",e))}}module.exports={System:{pushApp:function(e){e.set("trust proxy",1),e.use(session({name:"qsndW0VR_Wp2gonjSDkB",secret:"DiscordEasyDashboard",resave:!0,saveUninitialized:!0}))}},Dashboard:{settings:async function(e){clientID=e.clientID,clientSecret=e.clientSecret,callbackUrl=e.callbackUrl,scope=e.scope,botToken=e.botToken,loginPath=e.loginPath,authorizeUrlPrompt=e.authorizeUrlPrompt},callbackGet:async function(e,r,t){if(!settingsControl())return console.error("[!] Wrong Settings !");if(!e.query.code)return r.redirect("/");try{let o="client_id={}&client_secret={}&grant_type=authorization_code&redirect_uri={}&code={}&scope={}".replace("{}",clientID).replace("{}",clientSecret).replace("{}",callbackUrl).replace("{}",e.query.code).replace("{}",scope),s=await axios({method:"post",baseURL:"https://discordapp.com/api/oauth2/token",data:o,headers:{"Content-Type":"application/x-www-form-urlencoded"}});e.session.CODE=s.data.access_token,e.session.REFRESH_CODE=s.data.refresh_token,e.session.TOKEN_TYPE=s.data.token_type,r.redirect(t)}catch(e){r.json({error:"API error or wrong settings. Please contact site staff."})}},savedUserCheck:function(e,r){return settingsControl()?(t=!!e.session.CODE,o=!!e.session.REFRESH_CODE,(0!=t||0!=o)&&((1!=t||0!=o)&&(0!=t||1!=o))):console.error("[!] Wrong Settings !");var t,o},checkLogin:function(e,r,t){if(!settingsControl())return console.error("[!] Wrong Settings !");require("./DiscordEasyDashboard.js").Dashboard.savedUserCheck(e,r)?t():r.redirect(loginPath)},fileRender:function(e,r,t,o){if(!settingsControl())return console.error("[!] Wrong Settings !");try{e.render(`${r}.${t}`,o)}catch{console.error("err")}},getUserInfo:async function(e,r){if(!settingsControl())return console.error("[!] Wrong Settings !");if(!require("./"+__filename.slice(__dirname.length+1)).Dashboard.savedUserCheck(e,r))return JSON.stringify({});try{await resCode(e,e.session.REFRESH_CODE);let o=await axios({method:"get",baseURL:"https://discordapp.com/api/users/@me",headers:{authorization:`${e.session.TOKEN_TYPE} ${e.session.CODE}`,"Content-Type":"application/x-www-form-urlencoded"}});var t;return t=o.data.premium_type>0?`https://cdn.discordapp.com/avatars/${o.data.id}/${o.data.avatar}.gif`:`https://cdn.discordapp.com/avatars/${o.data.id}/${o.data.avatar}.png`,JSON.stringify({id:o.data.id,username:o.data.username,avatarLink:t,tag:`${o.data.username}#${o.data.discriminator}`,discriminator:o.data.discriminator,public_flags:o.data.public_flags,flags:o.data.flags,locale:o.data.locale,mfa_enabled:o.data.mfa_enabled,premium_type:o.data.premium_type})}catch{r.json({error:"Please try again."})}},getBotLink:function(){return settingsControl()?authorizeUrlPrompt?`https://discord.com/api/oauth2/authorize?&client_id=${clientID}&redirect_uri=${callbackUrl}&response_type=code&scope=${scope}&prompt=none`:`https://discord.com/api/oauth2/authorize?&client_id=${clientID}&redirect_uri=${callbackUrl}&response_type=code&scope=${scope}`:console.error("[!] Wrong Settings !")},getUserGuilds:async function(e,r){if(!settingsControl())return console.error("[!] Wrong Settings !");if(!require("./"+__filename.slice(__dirname.length+1)).Dashboard.savedUserCheck(e,r))return JSON.stringify({});try{await resCode(e,e.session.REFRESH_CODE);let t=await axios({method:"get",baseURL:"https://discordapp.com/api/users/@me/guilds",headers:{authorization:`${e.session.TOKEN_TYPE} ${e.session.CODE}`,"Content-Type":"application/x-www-form-urlencoded"}});return bot.login(botToken).catch(e=>{console.error("DiscordEasyDashoard - Error connecting Discord to client: Check your token or contact the owner")}),JSON.parse(JSON.stringify("["+JSON.parse(JSON.stringify(t.data)).map(e=>(function(e){let r=new permCalculator(e.permissions);var t;if(t=e.icon?`https://cdn.discordapp.com/icons/${e.id}/${e.icon}.png?size=128`:`https://dummyimage.com/128x128/7289da/FFF.png&text=${e.name.split(" ").map(e=>e[0]).join("")}`,r.has("MANAGE_GUILD"))return JSON.stringify({id:e.id,name:e.name,iconUrl:t,owner:e.owner,permissions:e.permissions,features:e.features})})(e)).join("").replace(/}{/g,"},{")+"]"))}catch{r.json({error:"Please try again."})}},userLogout:function(e,r,t){e.session.destroy(function(e){console.log('{ "error_description": "An app push error has occurred to the system..", "error": "{}" }'.replace("{}",e))}),r.redirect(t)}}};
